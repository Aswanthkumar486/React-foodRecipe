{"version":3,"sources":["components/SearchBar.jsx","components/RecipeCard.jsx","FrontPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","_ref","handleSubmit","query","isLoading","setQuery","React","createElement","onSubmit","value","className","placeholder","name","disabled","onChange","event","target","type","RecipeCard","recipe","idMeal","strMeal","strCategory","strMealThumb","src","alt","href","FrontPage","onGetStarted","onClick","App","setIsLoading","useState","recipes","setRecipes","showFrontPage","setShowFrontPage","loadingDelay","setLoadingDelay","searchRecipes","async","url","res","fetch","data","json","meals","useEffect","handleGetStarted","setTimeout","Fragment","preventDefault","map","key","backToFront","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0LA4BeA,MA1BGC,IAKX,IALY,aACfC,EAAY,MACZC,EAAK,UACLC,EAAS,SACTC,GACHJ,EACG,OACIK,IAAAC,cAAA,QAAMC,SAAUN,GACZI,IAAAC,cAAA,SACIE,MAAON,EACPO,UAAU,eACVC,YAAY,gBACZC,KAAK,QACLC,SAAUT,EACVU,SAAWC,GAAUV,EAASU,EAAMC,OAAOP,SAE/CH,IAAAC,cAAA,SACIM,SAAUT,IAAcD,EACxBc,KAAK,SACLP,UAAU,MACVD,MAAM,aCGPS,MAxBIjB,IAAiB,IAAhB,OAAEkB,GAAQlB,EAC1B,MAAM,OACFmB,EAAM,QACNC,EAAO,YACPC,EAAW,aACXC,GACAJ,EAEJ,OACIb,IAAAC,cAAA,OAAKG,UAAU,QACXJ,IAAAC,cAAA,OACIiB,IAAKD,EACLE,IAAKJ,EACLX,UAAU,eAEdJ,IAAAC,cAAA,OAAKG,UAAU,aACXJ,IAAAC,cAAA,QAAMG,UAAU,YAAYY,GAC5BhB,IAAAC,cAAA,UAAKc,GACLf,IAAAC,cAAA,KAAGmB,KAAM,kCAAoCN,EAAQJ,OAAO,UAAS,mBCJtEW,MAZG1B,IAAuB,IAAtB,aAAE2B,GAAc3B,EACjC,OACEK,IAAAC,cAAA,OAAKG,UAAU,cACbJ,IAAAC,cAAA,UAAI,+BACJD,IAAAC,cAAA,SAAG,qDACHD,IAAAC,cAAA,UAAQsB,QAASD,EAAclB,UAAU,aAAY,iBCyE5CoB,MAzEf,WACE,MAAO1B,EAAW2B,GAAgBC,oBAAS,IACpC7B,EAAOE,GAAY2B,mBAAS,KAC5BC,EAASC,GAAcF,mBAAS,KAChCG,EAAeC,GAAoBJ,oBAAS,IAC5CK,EAAcC,GAAmBN,oBAAS,GAE3CO,EAAgBC,UACpBT,GAAa,GACb,MAAMU,EAXQ,wDAWUtC,EAClBuC,QAAYC,MAAMF,GAClBG,QAAaF,EAAIG,OACvBX,EAAWU,EAAKE,OAChBf,GAAa,IA0Bf,OAvBAgB,oBAAU,KACRR,KACC,IAsBDjC,IAAAC,cAAA,OAAKG,UAAU,aACZyB,EACC7B,IAAAC,cAACoB,EAAS,CAACC,aAjBQoB,KACvBV,GAAgB,GAChBW,WAAW,KACTb,GAAiB,GACjBE,GAAgB,IACf,QAaGD,EACF/B,IAAAC,cAAA,OAAKG,UAAU,WACbJ,IAAAC,cAAA,OAAKG,UAAU,YAGjBJ,IAAAC,cAAAD,IAAA4C,SAAA,KACE5C,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAACP,EAAS,CACRI,UAAWA,EACXD,MAAOA,EACPE,SAAUA,EACVH,aAlCYa,IACpBA,EAAMoC,iBACNZ,OAkCMjC,IAAAC,cAAA,OAAKG,UAAU,WACZuB,EACCA,EAAQmB,IAAKjC,GACXb,IAAAC,cAACW,EAAU,CAACmC,IAAKlC,EAAOC,OAAQD,OAAQA,KAG1C,eAIJb,IAAAC,cAAA,UAAQsB,QAlCGyB,KACjBvB,GAAa,GACbK,GAAiB,GACjB/B,EAAS,IACTkC,KA8BoC7B,UAAU,YAAW,WC9D9C6C,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKzD,IAAkD,IAAjD,OAAE0D,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS9D,EACpE0D,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH9D,IAAAC,cAACD,IAAM+D,WAAU,KACf/D,IAAAC,cAACuB,EAAG,QAORyB,K","file":"static/js/main.6810fe37.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SearchBar = ({\r\n    handleSubmit,\r\n    query,\r\n    isLoading,\r\n    setQuery\r\n}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                value={query}\r\n                className=\"form-control\"\r\n                placeholder=\"Search Recipe\"\r\n                name=\"query\"\r\n                disabled={isLoading}\r\n                onChange={(event) => setQuery(event.target.value)}\r\n            />   \r\n            <input\r\n                disabled={isLoading || !query}\r\n                type=\"submit\"\r\n                className=\"btn\"\r\n                value=\"Search\"\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nconst RecipeCard = ({ recipe }) => {\r\n    const {\r\n        idMeal,\r\n        strMeal,\r\n        strCategory,\r\n        strMealThumb,\r\n    } = recipe;\r\n    \r\n    return (\r\n        <div className=\"card\">\r\n            <img\r\n                src={strMealThumb}\r\n                alt={strMeal}\r\n                className=\"card-image\"\r\n            />\r\n            <div className=\"card-body\">\r\n                <span className=\"category\">{strCategory}</span>\r\n                <h3>{strMeal}</h3>\r\n                <a href={\"https://www.themealdb.com/meal/\" + idMeal} target=\"_blank\">Instructions</a>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RecipeCard;","import React from \"react\";\r\nimport \"./App.css\"; // Add custom styling for FrontPage if needed\r\n\r\nconst FrontPage = ({ onGetStarted }) => {\r\n  return (\r\n    <div className=\"front-page\">\r\n      <h1>Welcome to Our Food Recipes</h1>\r\n      <p>Discover delicious recipes from around the world!</p>\r\n      <button onClick={onGetStarted} className=\"start-btn\">\r\n        Get Started\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FrontPage;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"./components/SearchBar\";\nimport RecipeCard from \"./components/RecipeCard\";\nimport FrontPage from \"./FrontPage\";\n\nconst searchApi = \"https://www.themealdb.com/api/json/v1/1/search.php?s=\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  const [showFrontPage, setShowFrontPage] = useState(true);\n  const [loadingDelay, setLoadingDelay] = useState(false);\n\n  const searchRecipes = async () => {\n    setIsLoading(true);\n    const url = searchApi + query;\n    const res = await fetch(url);\n    const data = await res.json();\n    setRecipes(data.meals);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    searchRecipes();\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    searchRecipes();\n  };\n\n  const handleGetStarted = () => {\n    setLoadingDelay(true);\n    setTimeout(() => {\n      setShowFrontPage(false);\n      setLoadingDelay(false);\n    }, 1000); // Simulate a 2-second loading delay\n  };\n  const backToFront =() =>{\n    setIsLoading(true);\n    setShowFrontPage(true);\n    setQuery('');\n    searchRecipes([]);\n  }\n\n  return (\n    <div className=\"container\">\n      {showFrontPage ? (\n        <FrontPage onGetStarted={handleGetStarted} />\n      ) : loadingDelay ? (\n        <div className=\"spinner\">\n          <div className=\"loader\"></div>\n        </div>\n      ) : (\n        <>\n          <h2>Our Food Recipes</h2>\n          <SearchBar\n            isLoading={isLoading}\n            query={query}\n            setQuery={setQuery}\n            handleSubmit={handleSubmit}\n          />\n          <div className=\"recipes\">\n            {recipes ? (\n              recipes.map((recipe) => (\n                <RecipeCard key={recipe.idMeal} recipe={recipe} />\n              ))\n            ) : (\n              \"No Results.\"\n            )}\n           \n          </div>\n          <button onClick={backToFront} className=\"back-btn\">back</button>\n        </>\n      )} \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}